{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/conversationProfile/group-member-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/conversationProfile/group-member-info.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport { Popover } from 'element-ui'\nimport { getFullDate } from '../../../utils/date'\nexport default {\n  components: {\n    ElPopover: Popover\n  },\n  props: ['member'],\n  data() {\n    return {\n      muteTime: '',\n      popoverVisible: false,\n      nameCardPopoverVisible: false,\n      nameCard: this.member.nameCard\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation,\n      currentUserProfile: state => state.user.currentUserProfile,\n      current: state => state.current\n    }),\n    // 是否显示踢出群成员按钮\n    showKickout() {\n      return (this.isOwner || this.isAdmin) && !this.isMine\n    },\n    isOwner() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\n    },\n    isAdmin() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\n    },\n    isMine() {\n      return this.currentUserProfile.userID === this.member.userID\n    },\n    canChangeRole() {\n      return (\n        this.isOwner &&\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\n      )\n    },\n    changeRoleTitle() {\n      if (!this.canChangeRole) {\n        return ''\n      }\n      return this.isOwner && this.member.role === 'Admin'\n        ? '设为：Member'\n        : '设为：Admin'\n    },\n    // 是否显示禁言时间\n    showMuteUntil() {\n      // 禁言时间小于当前时间\n      return this.member.muteUntil * 1000 > this.current\n    },\n    // 是否显示取消禁言按钮\n    showCancelBan() {\n      if (\n        this.showMuteUntil &&\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\n        !this.isMine\n      ) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示禁言按钮\n    showBan() {\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示编辑群名片按钮\n    showEditNameCard() {\n      return this.isOwner || this.isAdmin\n    },\n    // 日期格式化后的禁言时间\n    muteUntil() {\n      return getFullDate(new Date(this.member.muteUntil * 1000))\n    }\n  },\n  methods: {\n    kickoutGroupMember() {\n      this.tim\n        .deleteGroupMember({\n          groupID: this.currentConversation.groupProfile.groupID,\n          reason: '我要踢你出群',\n          userIDList: [this.member.userID]\n        })\n        .then(() => {\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    changeMemberRole() {\n      if (!this.canChangeRole) {\n        return\n      }\n      let currentRole = this.member.role\n      this.tim\n        .setGroupMemberRole({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberMuteTime() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: Number(this.muteTime)\n        })\n        .then(() => {\n          this.muteTime = ''\n          this.popoverVisible = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    // 取消禁言\n    cancelMute() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: 0\n        })\n        .then(() => {\n          this.muteTime = ''\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberNameCard() {\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        })\n        return\n      }\n      this.tim\n        .setGroupMemberNameCard({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          nameCard: this.nameCard\n        })\n        .then(() => {\n          this.nameCardPopoverVisible = false\n          this.$store.commit('showMessage', {\n            message: '修改成功'\n          })\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n",{"version":3,"sources":["group-member-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"group-member-info.vue","sourceRoot":"src/components/conversation/conversationProfile","sourcesContent":["<template>\n  <div>\n    <div>\n      <span class=\"label\">userID:</span>\n      {{ member.userID }}\n      <el-button v-if=\"showCancelBan\" type=\"text\" @click=\"cancelMute\">取消禁言</el-button>\n      <el-popover title=\"禁言\" v-model=\"popoverVisible\" v-show=\"showBan\">\n        <el-input\n          v-model=\"muteTime\"\n          placeholder=\"请输入禁言时间\"\n          @keydown.enter.native=\"setGroupMemberMuteTime\"\n        />\n        <el-button slot=\"reference\" type=\"text\" style=\"color:red;\">禁言</el-button>\n      </el-popover>\n    </div>\n    <div>\n      <span class=\"label\">nick:</span>\n      {{ member.nick || '暂无' }}\n    </div>\n    <div>\n      <span class=\"label\">nameCard:</span>\n      {{ member.nameCard || '暂无' }}\n      <el-popover title=\"修改群名片\" v-model=\"nameCardPopoverVisible\" v-show=\"showEditNameCard\">\n        <el-input\n          v-model=\"nameCard\"\n          placeholder=\"请输入群名片\"\n          @keydown.enter.native=\"setGroupMemberNameCard\"\n        />\n        <i\n          class=\"el-icon-edit\"\n          title=\"修改群名片\"\n          slot=\"reference\"\n          style=\"cursor:pointer; font-size:1.6rem;\"\n        ></i>\n      </el-popover>\n    </div>\n    <div>\n      <span class=\"label\">role:</span>\n      <span class=\"content role\" :title=\"changeRoleTitle\">{{ member.role }}</span>\n    </div>\n    <div v-if=\"showMuteUntil\">\n      <span class=\"label\">禁言至:</span>\n      <span class=\"content\">{{ muteUntil }}</span>\n    </div>\n    <el-button type=\"text\" v-if=\"canChangeRole\" @click=\"changeMemberRole\">\n      {{\n      member.role === 'Admin' ? '取消管理员' : '设为管理员'\n      }}\n    </el-button>\n    <el-button type=\"text\" v-if=\"showKickout\" style=\"color:red;\" @click=\"kickoutGroupMember\">踢出群组</el-button>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { Popover } from 'element-ui'\nimport { getFullDate } from '../../../utils/date'\nexport default {\n  components: {\n    ElPopover: Popover\n  },\n  props: ['member'],\n  data() {\n    return {\n      muteTime: '',\n      popoverVisible: false,\n      nameCardPopoverVisible: false,\n      nameCard: this.member.nameCard\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation,\n      currentUserProfile: state => state.user.currentUserProfile,\n      current: state => state.current\n    }),\n    // 是否显示踢出群成员按钮\n    showKickout() {\n      return (this.isOwner || this.isAdmin) && !this.isMine\n    },\n    isOwner() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\n    },\n    isAdmin() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\n    },\n    isMine() {\n      return this.currentUserProfile.userID === this.member.userID\n    },\n    canChangeRole() {\n      return (\n        this.isOwner &&\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\n      )\n    },\n    changeRoleTitle() {\n      if (!this.canChangeRole) {\n        return ''\n      }\n      return this.isOwner && this.member.role === 'Admin'\n        ? '设为：Member'\n        : '设为：Admin'\n    },\n    // 是否显示禁言时间\n    showMuteUntil() {\n      // 禁言时间小于当前时间\n      return this.member.muteUntil * 1000 > this.current\n    },\n    // 是否显示取消禁言按钮\n    showCancelBan() {\n      if (\n        this.showMuteUntil &&\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\n        !this.isMine\n      ) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示禁言按钮\n    showBan() {\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示编辑群名片按钮\n    showEditNameCard() {\n      return this.isOwner || this.isAdmin\n    },\n    // 日期格式化后的禁言时间\n    muteUntil() {\n      return getFullDate(new Date(this.member.muteUntil * 1000))\n    }\n  },\n  methods: {\n    kickoutGroupMember() {\n      this.tim\n        .deleteGroupMember({\n          groupID: this.currentConversation.groupProfile.groupID,\n          reason: '我要踢你出群',\n          userIDList: [this.member.userID]\n        })\n        .then(() => {\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    changeMemberRole() {\n      if (!this.canChangeRole) {\n        return\n      }\n      let currentRole = this.member.role\n      this.tim\n        .setGroupMemberRole({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberMuteTime() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: Number(this.muteTime)\n        })\n        .then(() => {\n          this.muteTime = ''\n          this.popoverVisible = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    // 取消禁言\n    cancelMute() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: 0\n        })\n        .then(() => {\n          this.muteTime = ''\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberNameCard() {\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        })\n        return\n      }\n      this.tim\n        .setGroupMemberNameCard({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          nameCard: this.nameCard\n        })\n        .then(() => {\n          this.nameCardPopoverVisible = false\n          this.$store.commit('showMessage', {\n            message: '修改成功'\n          })\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.label {\n  color: rgb(204, 200, 200);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n</style>\n"]}]}