{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/message/message-send-box.vue?vue&type=style&index=0&id=0148fc24&lang=stylus&scoped=true&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/message/message-send-box.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#message-send-box-wrapper {\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: 3px 20px 20px 20px;\n}\n\n.emojis {\n  height: 160px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.emoji {\n  height: 40px;\n  width: 40px;\n  box-sizing: border-box;\n}\n\n.send-header-bar {\n  box-sizing: border-box;\n  padding: 3px 0 0 0;\n}\n\n.send-header-bar i {\n  cursor: pointer;\n  font-size: 24px;\n  color: gray;\n  margin: 0 12px 0 0;\n}\n\n.send-header-bar i:hover {\n  color: $black;\n}\n\ntextarea {\n  resize: none;\n}\n\n.text-input {\n  font-size: 16px;\n  width: 100%;\n  box-sizing: box-sizing;\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n.block {\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n}\n\n.bottom {\n  padding-top: 10px;\n  position: relative;\n\n  .btn-send {\n    cursor: pointer;\n    position: absolute;\n    color: $primary;\n    font-size: 30px;\n    right: 0;\n    bottom: -5px;\n    padding: 6px 6px 4px 4px;\n    border-radius: 50%;\n  }\n}\n",{"version":3,"sources":["message-send-box.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiZA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"message-send-box.vue","sourceRoot":"src/components/message","sourcesContent":["<template>\n  <div id=\"message-send-box-wrapper\" :style=\"focus ? {'backgroundColor': 'white'} : {}\">\n    <div class=\"send-header-bar\">\n      <el-popover placement=\"top\" width=\"400\" trigger=\"click\">\n        <div class=\"emojis\">\n          <div v-for=\"item in emojiName\" class=\"emoji\" :key=\"item\" @click=\"chooseEmoji(item)\">\n            <img :src=\"emojiUrl + emojiMap[item]\" style=\"width:30px;height:30px\" />\n          </div>\n        </div>\n        <i class=\"iconfont icon-smile\" slot=\"reference\" title=\"发表情\"></i>\n      </el-popover>\n      <i class=\"iconfont icon-tupian\" title=\"发图片\" @click=\"handleSendImageClick\"></i>\n      <i class=\"iconfont icon-wenjian\" title=\"发文件\" @click=\"handleSendFileClick\"></i>\n      <i class=\"iconfont icon-zidingyi\" title=\"发自定义消息\" @click=\"sendCustomDialogVisible = true\"></i>\n      <i class=\"iconfont icon-diaocha\" title=\"小调查\" @click=\"surveyDialogVisible = true\"></i>\n    </div>\n    <el-dialog title=\"发自定义消息\" :visible.sync=\"sendCustomDialogVisible\" width=\"30%\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"data\">\n          <el-input v-model=\"form.data\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"description\">\n          <el-input v-model=\"form.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"extension\">\n          <el-input v-model=\"form.extension\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"sendCustomDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"sendCustomMessage\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog title=\"对IM Web demo的建议和使用感受\" :visible.sync=\"surveyDialogVisible\" width=\"30%\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"评分\">\n          <div class=\"block\">\n            <el-rate v-model=\"rate\" :colors=\"colors\" show-text></el-rate>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"建议\">\n          <el-input\n            type=\"textarea\"\n            :rows=\"2\"\n            placeholder=\"请输入内容\"\n            resize=\"none\"\n            v-model=\"suggestion\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"surveyDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"sendSurvey\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-popover\n      trigger=\"manual\"\n      v-model=\"showAtGroupMember\"\n      placement=\"top\"\n      style=\"max-height:500px;overflow-y:scroll;\"\n    >\n      <el-radio-group\n        v-model=\"atUserID\"\n        style=\"display:flex;flex-decoration: column;\"\n        v-for=\"member in memberList\"\n        :key=\"member.userID\"\n        @change=\"handleSelectAtUser\"\n      >\n        <el-radio :label=\"member.userID\">{{ member.nameCard || member.nick || member.userID }}</el-radio>\n      </el-radio-group>\n    </el-popover>\n    <div class=\"bottom\">\n      <textarea\n        ref=\"text-input\"\n        rows=\"4\"\n        resize=\"false\"\n        v-model=\"messageContent\"\n        class=\"text-input\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n        @keydown.enter.exact.prevent=\"handleEnter\"\n        @keyup.ctrl.enter.prevent.exact=\"handleLine\"\n        @keydown.up.stop=\"handleUp\"\n        @keydown.down.stop=\"handleDown\"\n      >\n      </textarea>\n      <el-tooltip\n        class=\"item\"\n        effect=\"dark\"\n        content=\"按Enter发送消息，Ctrl+Enter换行\"\n        placement=\"left-start\"\n      >\n        <div class=\"btn-send\" @click=\"sendTextMessage\">\n          <div class=\"tim-icon-send\"></div>\n        </div>\n      </el-tooltip>\n    </div>\n    <input\n      type=\"file\"\n      id=\"imagePicker\"\n      ref=\"imagePicker\"\n      accept=\".jpg, .jpeg, .png, .gif\"\n      @change=\"sendImage\"\n      style=\"display:none\"\n    />\n    <input type=\"file\" id=\"filePicker\" ref=\"filePicker\" @change=\"sendFile\" style=\"display:none\" />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport {\n  Form,\n  FormItem,\n  Input,\n  Dialog,\n  Popover,\n  RadioGroup,\n  Radio,\n  Tooltip,\n  Rate\n} from 'element-ui'\nimport { emojiMap, emojiName, emojiUrl } from '../../utils/emojiMap'\nexport default {\n  name: 'message-send-box',\n  props: ['scrollMessageListToButtom'],\n  components: {\n    ElInput: Input,\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElDialog: Dialog,\n    ElPopover: Popover,\n    ElRadioGroup: RadioGroup,\n    ElRadio: Radio,\n    ElTooltip: Tooltip,\n    ElRate: Rate\n  },\n  data() {\n    return {\n      colors: ['#99A9BF', '#F7BA2A', '#FF9900'],\n      messageContent: '',\n      isSendCustomMessage: false,\n      sendCustomDialogVisible: false,\n      surveyDialogVisible: false,\n      form: {\n        data: '',\n        description: '',\n        extension: ''\n      },\n      rate: 5, // 评分\n      suggestion: '', // 建议\n      file: '',\n      emojiMap: emojiMap,\n      emojiName: emojiName,\n      emojiUrl: emojiUrl,\n      showAtGroupMember: false,\n      atUserID: '',\n      focus: false\n    }\n  },\n\n  computed: {\n    ...mapGetters(['toAccount', 'currentConversationType']),\n    ...mapState({\n      memberList: state => state.group.currentMemberList\n    })\n  },\n  mounted() {\n    this.$refs['text-input'].addEventListener('paste', this.handlePaste)\n  },\n  unmounted() {\n    this.$refs['text-input'].removeEventListener('paste', this.handlePaste)\n  },\n  methods: {\n    handleSelectAtUser() {\n      this.messageContent += this.atUserID + ' '\n      this.showAtGroupMember = false\n    },\n    handleUp() {\n      const index = this.memberList.findIndex(\n        member => member.userID === this.atUserID\n      )\n      if (index - 1 < 0) {\n        return\n      }\n      this.atUserID = this.memberList[index - 1].userID\n    },\n    handleDown() {\n      const index = this.memberList.findIndex(\n        member => member.userID === this.atUserID\n      )\n      if (index + 1 >= this.memberList.length) {\n        return\n      }\n      this.atUserID = this.memberList[index + 1].userID\n    },\n    handleEnter() {\n      if (this.showAtGroupMember) {\n        this.handleSelectAtUser()\n      } else {\n        this.sendTextMessage()\n      }\n    },\n    handleLine() {\n      this.messageContent += '\\n'\n    },\n    handlePaste(e) {\n      let clipboardData = e.clipboardData\n      let file\n      if (\n        clipboardData &&\n        clipboardData.files &&\n        clipboardData.files.length > 0\n      ) {\n        file = clipboardData.files[0]\n      }\n\n      if (typeof file === 'undefined') {\n        return\n      }\n      // 1. 创建消息实例，接口返回的实例可以上屏\n      let message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: file\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n\n      // 2. 发送消息\n      let promise = this.tim.sendMessage(message)\n      promise.catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n    },\n    sendTextMessage() {\n      if (\n        this.messageContent === '' ||\n        this.messageContent.trim().length === 0\n      ) {\n        this.messageContent = ''\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息哦！',\n          type: 'info'\n        })\n        return\n      }\n      const message = this.tim.createTextMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: { text: this.messageContent }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.$bus.$emit('scroll-bottom')\n      this.tim.sendMessage(message).catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n      this.messageContent = ''\n    },\n    sendCustomMessage() {\n      if (\n        this.form.data.length === 0 &&\n        this.form.description.length === 0 &&\n        this.form.extension.length === 0\n      ) {\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息',\n          type: 'info'\n        })\n        return\n      }\n      const message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: this.form.data,\n          description: this.form.description,\n          extension: this.form.extension\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim.sendMessage(message).catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      })\n      this.sendCustomDialogVisible = false\n    },\n    random(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min)\n    },\n    sendSurvey() {\n      const message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: 'survey',\n          description: String(this.rate),\n          extension: this.suggestion\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      })\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n          Object.assign(this, {\n            rate: 5,\n            suggestion: ''\n          })\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n      this.surveyDialogVisible = false\n    },\n    chooseEmoji(item) {\n      this.messageContent += item\n    },\n    handleSendImageClick() {\n      this.$refs.imagePicker.click()\n    },\n    handleSendFileClick() {\n      this.$refs.filePicker.click()\n    },\n    sendImage() {\n      const message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('imagePicker') // 或者用event.target\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n          this.$refs.imagePicker.value = null\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n    },\n    sendFile() {\n      const message = this.tim.createFileMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('filePicker') // 或者用event.target\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n          this.$refs.imagePicker.value = null\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n#message-send-box-wrapper {\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: 3px 20px 20px 20px;\n}\n\n.emojis {\n  height: 160px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.emoji {\n  height: 40px;\n  width: 40px;\n  box-sizing: border-box;\n}\n\n.send-header-bar {\n  box-sizing: border-box;\n  padding: 3px 0 0 0;\n}\n\n.send-header-bar i {\n  cursor: pointer;\n  font-size: 24px;\n  color: gray;\n  margin: 0 12px 0 0;\n}\n\n.send-header-bar i:hover {\n  color: $black;\n}\n\ntextarea {\n  resize: none;\n}\n\n.text-input {\n  font-size: 16px;\n  width: 100%;\n  box-sizing: box-sizing;\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n.block {\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n}\n\n.bottom {\n  padding-top: 10px;\n  position: relative;\n\n  .btn-send {\n    cursor: pointer;\n    position: absolute;\n    color: $primary;\n    font-size: 30px;\n    right: 0;\n    bottom: -5px;\n    padding: 6px 6px 4px 4px;\n    border-radius: 50%;\n  }\n}\n</style>\n"]}]}