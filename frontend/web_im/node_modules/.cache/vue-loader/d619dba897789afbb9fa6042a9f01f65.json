{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/message/message-elements/sound-element.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/message/message-elements/sound-element.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MessageBubble from '../message-bubble'\nexport default {\n  name: 'SoundElement',\n  props: {\n    payload: {\n      type: Object,\n      required: true\n    },\n    isMine: {\n      type: Boolean\n    }\n  },\n  components: {\n    MessageBubble\n  },\n  data() {\n    return {\n      amr: null\n    }\n  },\n  computed: {\n    url() {\n      return this.payload.url\n    },\n    size() {\n      return this.payload.size\n    },\n    second() {\n      return this.payload.second\n    }\n  },\n  methods: {\n    play() {\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\n      const audio = document.createElement('audio')\n      audio.addEventListener('error', this.tryPlayAMR) // 播放出错，则尝试使用 AMR 播放\n      audio.src = this.url\n      const promise = audio.play()\n      if (promise) {\n        promise.catch(() => {})\n      }\n    },\n    tryPlayAMR() {\n      try {\n        const isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent)\n        // amr 播放组件库在 IE 不支持\n        if (isIE) {\n          this.$store.commit('showMessage', {\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n            type: 'warning'\n          })\n          return\n        }\n        // 动态插入 amr 播放组件库\n        if (!window.BenzAMRRecorder) {\n          const script = document.createElement('script')\n          script.addEventListener('load', this.playAMR)\n          script.src = './BenzAMRRecorder.js'\n          const firstScript = document.getElementsByTagName('script')[0]\n          firstScript.parentNode.insertBefore(script, firstScript)\n          return\n        }\n        this.playAMR()\n      } catch (error) {\n        this.$store.commit('showMessage', {\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n          type: 'warning'\n        })\n      }\n    },\n    playAMR() {\n      if (!this.amr && window.BenzAMRRecorder) {\n        this.amr = new window.BenzAMRRecorder()\n      }\n      if (this.amr.isInit()) {\n        this.amr.play()\n        return\n      }\n      this.amr.initWithUrl(this.url).then(() => {\n        this.amr.play()\n      })\n    }\n  }\n}\n",{"version":3,"sources":["sound-element.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sound-element.vue","sourceRoot":"src/components/message/message-elements","sourcesContent":["<template>\n<message-bubble :isMine=isMine>\n  <div class=\"sound-element-wrapper\" title=\"单击播放\" @click=\"play\">\n    <i class=\"iconfont icon-voice\"></i>\n    {{ second + '\"' }}\n  </div>\n</message-bubble>\n</template>\n\n<script>\nimport MessageBubble from '../message-bubble'\nexport default {\n  name: 'SoundElement',\n  props: {\n    payload: {\n      type: Object,\n      required: true\n    },\n    isMine: {\n      type: Boolean\n    }\n  },\n  components: {\n    MessageBubble\n  },\n  data() {\n    return {\n      amr: null\n    }\n  },\n  computed: {\n    url() {\n      return this.payload.url\n    },\n    size() {\n      return this.payload.size\n    },\n    second() {\n      return this.payload.second\n    }\n  },\n  methods: {\n    play() {\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\n      const audio = document.createElement('audio')\n      audio.addEventListener('error', this.tryPlayAMR) // 播放出错，则尝试使用 AMR 播放\n      audio.src = this.url\n      const promise = audio.play()\n      if (promise) {\n        promise.catch(() => {})\n      }\n    },\n    tryPlayAMR() {\n      try {\n        const isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent)\n        // amr 播放组件库在 IE 不支持\n        if (isIE) {\n          this.$store.commit('showMessage', {\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n            type: 'warning'\n          })\n          return\n        }\n        // 动态插入 amr 播放组件库\n        if (!window.BenzAMRRecorder) {\n          const script = document.createElement('script')\n          script.addEventListener('load', this.playAMR)\n          script.src = './BenzAMRRecorder.js'\n          const firstScript = document.getElementsByTagName('script')[0]\n          firstScript.parentNode.insertBefore(script, firstScript)\n          return\n        }\n        this.playAMR()\n      } catch (error) {\n        this.$store.commit('showMessage', {\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n          type: 'warning'\n        })\n      }\n    },\n    playAMR() {\n      if (!this.amr && window.BenzAMRRecorder) {\n        this.amr = new window.BenzAMRRecorder()\n      }\n      if (this.amr.isInit()) {\n        this.amr.play()\n        return\n      }\n      this.amr.initWithUrl(this.url).then(() => {\n        this.amr.play()\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.sound-element-wrapper {\n  padding: 0px 10px;\n  cursor: pointer;\n}\n</style>\n"]}]}