{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/group/create-group.vue?vue&type=template&id=baafb1e4&scoped=true&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/group/create-group.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"createGroupForm\",\n          attrs: { model: _vm.form, rules: _vm.rules, \"label-width\": \"100px\" }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群ID\" } },\n            [\n              _c(\"el-input\", {\n                model: {\n                  value: _vm.form.groupID,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"groupID\", $$v)\n                  },\n                  expression: \"form.groupID\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群名称\", prop: \"name\" } },\n            [\n              _c(\"el-input\", {\n                model: {\n                  value: _vm.form.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"name\", $$v)\n                  },\n                  expression: \"form.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群类型\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  model: {\n                    value: _vm.form.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form, \"type\", $$v)\n                    },\n                    expression: \"form.type\"\n                  }\n                },\n                [\n                  _c(\"el-option\", {\n                    attrs: { label: \"Private\", value: \"Private\" }\n                  }),\n                  _c(\"el-option\", {\n                    attrs: { label: \"Public\", value: \"Public\" }\n                  }),\n                  _c(\"el-option\", {\n                    attrs: { label: \"ChatRoom\", value: \"ChatRoom\" }\n                  }),\n                  _c(\"el-option\", {\n                    attrs: { label: \"AVChatRoom\", value: \"AVChatRoom\" }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群头像地址\" } },\n            [\n              _c(\"el-input\", {\n                model: {\n                  value: _vm.form.avatar,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"avatar\", $$v)\n                  },\n                  expression: \"form.avatar\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群简介\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", maxlength: 240 },\n                model: {\n                  value: _vm.form.introduction,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"introduction\", $$v)\n                  },\n                  expression: \"form.introduction\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群公告\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"textarea\", maxlength: 300 },\n                model: {\n                  value: _vm.form.notification,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"notification\", $$v)\n                  },\n                  expression: \"form.notification\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"加群方式\" } },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  attrs: { disabled: _vm.joinOptionDisabled },\n                  model: {\n                    value: _vm.form.joinOption,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form, \"joinOption\", $$v)\n                    },\n                    expression: \"form.joinOption\"\n                  }\n                },\n                [\n                  _c(\"el-radio\", { attrs: { label: \"FreeAccess\" } }, [\n                    _vm._v(\"自由加群\")\n                  ]),\n                  _c(\"el-radio\", { attrs: { label: \"NeedPermission\" } }, [\n                    _vm._v(\"需要验证\")\n                  ]),\n                  _c(\"el-radio\", { attrs: { label: \"DisableApply\" } }, [\n                    _vm._v(\"禁止加群\")\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"群成员列表\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: {\n                    \"default-first-option\": \"\",\n                    multiple: \"\",\n                    filterable: \"\",\n                    remote: \"\",\n                    disabled: _vm.form.type === \"AVChatRoom\",\n                    \"remote-method\": _vm.handleSearchUser,\n                    loading: _vm.loading,\n                    placeholder: \"请输入群成员 userID\"\n                  },\n                  model: {\n                    value: _vm.form.memberList,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form, \"memberList\", $$v)\n                    },\n                    expression: \"form.memberList\"\n                  }\n                },\n                _vm._l(_vm.options, function(item) {\n                  return _c(\"el-option\", {\n                    key: item,\n                    attrs: { label: item, value: item }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { attrs: { slot: \"footer\" }, slot: \"footer\" },\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.onSubmit(\"createGroupForm\")\n                }\n              }\n            },\n            [_vm._v(\"立即创建\")]\n          ),\n          _c(\"el-button\", { on: { click: _vm.closeCreateGroupModel } }, [\n            _vm._v(\"取消\")\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}