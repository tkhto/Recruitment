{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/group/create-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/group/create-group.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Form,\n  FormItem,\n  Input,\n  Select,\n  Option,\n  Radio,\n  RadioGroup\n} from 'element-ui'\nexport default {\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElInput: Input,\n    ElSelect: Select,\n    ElOption: Option,\n    ElRadioGroup: RadioGroup,\n    ElRadio: Radio\n  },\n  data() {\n    return {\n      form: {\n        groupID: '',\n        name: '',\n        type: 'Private',\n        avatar: '',\n        introduction: '',\n        notification: '',\n        joinOption: 'FreeAccess',\n        memberList: []\n      },\n      options: [],\n      loading: false,\n      rules: {\n        name: [{ required: true, message: '请输入群名称', trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    joinOptionDisabled() {\n      return [\n        this.TIM.TYPES.GRP_PRIVATE,\n        this.TIM.TYPES.GRP_CHATROOM,\n        this.TIM.TYPES.GRP_AVCHATROOM\n      ].includes(this.form.type)\n    }\n  },\n  methods: {\n    onSubmit(ref) {\n      this.$refs[ref].validate(valid => {\n        if (!valid) {\n          return false\n        }\n        this.createGroup()\n      })\n    },\n    closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false)\n    },\n    createGroup() {\n      this.tim.createGroup(this.getOptions()).then((imResponse) => {\n         this.$store.commit('showMessage', {\n            message: `群组：【${imResponse.data.group.name}】创建成功`,\n            type: 'success'\n          })\n        this.closeCreateGroupModel()\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    getOptions() {\n      let options = {\n        ...this.form,\n        memberList: this.form.memberList.map(userID => ({ userID }))\n      }\n      if (['Private', 'AVChatRoom'].includes(this.form.type)) {\n        delete options.joinOption\n      }\n      return options\n    },\n    handleSearchUser(userID) {\n      if (userID !== '') {\n        this.loading = true\n        this.tim.getUserProfile({ userIDList: [userID] }).then(({ data }) => {\n          this.options = data.map(item => item.userID)\n          this.loading = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["create-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"create-group.vue","sourceRoot":"src/components/group","sourcesContent":["<template>\n  <div>\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"createGroupForm\" label-width=\"100px\">\n      <el-form-item label=\"群ID\">\n        <el-input v-model=\"form.groupID\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群名称\" prop=\"name\">\n        <el-input v-model=\"form.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群类型\">\n        <el-select v-model=\"form.type\">\n          <el-option label=\"Private\" value=\"Private\"></el-option>\n          <el-option label=\"Public\" value=\"Public\"></el-option>\n          <el-option label=\"ChatRoom\" value=\"ChatRoom\"></el-option>\n          <el-option label=\"AVChatRoom\" value=\"AVChatRoom\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"群头像地址\">\n        <el-input v-model=\"form.avatar\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群简介\">\n        <el-input type=\"textarea\" v-model=\"form.introduction\" :maxlength=\"240\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"群公告\">\n        <el-input type=\"textarea\" v-model=\"form.notification\" :maxlength=\"300\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"加群方式\">\n        <el-radio-group v-model=\"form.joinOption\" :disabled=\"joinOptionDisabled\">\n          <el-radio label=\"FreeAccess\">自由加群</el-radio>\n          <el-radio label=\"NeedPermission\">需要验证</el-radio>\n          <el-radio label=\"DisableApply\">禁止加群</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"群成员列表\">\n        <el-select\n          v-model=\"form.memberList\"\n          default-first-option\n          multiple\n          filterable\n          remote\n          :disabled=\"form.type === 'AVChatRoom'\"\n          :remote-method=\"handleSearchUser\"\n          :loading=\"loading\"\n          placeholder=\"请输入群成员 userID\"\n        >\n          <el-option v-for=\"item in options\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\">\n      <el-button type=\"primary\" @click=\"onSubmit('createGroupForm')\">立即创建</el-button>\n      <el-button @click=\"closeCreateGroupModel\">取消</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  Form,\n  FormItem,\n  Input,\n  Select,\n  Option,\n  Radio,\n  RadioGroup\n} from 'element-ui'\nexport default {\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElInput: Input,\n    ElSelect: Select,\n    ElOption: Option,\n    ElRadioGroup: RadioGroup,\n    ElRadio: Radio\n  },\n  data() {\n    return {\n      form: {\n        groupID: '',\n        name: '',\n        type: 'Private',\n        avatar: '',\n        introduction: '',\n        notification: '',\n        joinOption: 'FreeAccess',\n        memberList: []\n      },\n      options: [],\n      loading: false,\n      rules: {\n        name: [{ required: true, message: '请输入群名称', trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    joinOptionDisabled() {\n      return [\n        this.TIM.TYPES.GRP_PRIVATE,\n        this.TIM.TYPES.GRP_CHATROOM,\n        this.TIM.TYPES.GRP_AVCHATROOM\n      ].includes(this.form.type)\n    }\n  },\n  methods: {\n    onSubmit(ref) {\n      this.$refs[ref].validate(valid => {\n        if (!valid) {\n          return false\n        }\n        this.createGroup()\n      })\n    },\n    closeCreateGroupModel() {\n      this.$store.commit('updateCreateGroupModelVisible', false)\n    },\n    createGroup() {\n      this.tim.createGroup(this.getOptions()).then((imResponse) => {\n         this.$store.commit('showMessage', {\n            message: `群组：【${imResponse.data.group.name}】创建成功`,\n            type: 'success'\n          })\n        this.closeCreateGroupModel()\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    getOptions() {\n      let options = {\n        ...this.form,\n        memberList: this.form.memberList.map(userID => ({ userID }))\n      }\n      if (['Private', 'AVChatRoom'].includes(this.form.type)) {\n        delete options.joinOption\n      }\n      return options\n    },\n    handleSearchUser(userID) {\n      if (userID !== '') {\n        this.loading = true\n        this.tim.getUserProfile({ userIDList: [userID] }).then(({ data }) => {\n          this.options = data.map(item => item.userID)\n          this.loading = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n</style>\n"]}]}