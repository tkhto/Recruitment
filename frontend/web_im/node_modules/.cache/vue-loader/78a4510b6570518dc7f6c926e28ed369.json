{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/current-conversation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/current-conversation.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapState } from 'vuex'\nimport MessageSendBox from '../message/message-send-box'\nimport MessageItem from '../message/message-item'\nimport ConversationProfile from './conversation-profile.vue'\nimport MemberProfileCard from '../group/member-profile-card'\nexport default {\n  name: 'CurrentConversation',\n  components: {\n    MessageSendBox,\n    MessageItem,\n    ConversationProfile,\n    MemberProfileCard\n  },\n  data() {\n    return {\n      isShowScrollButtomTips: false,\n      preScrollHeight: 0,\n      showConversationProfile: false,\n      timeout: ''\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation,\n      currentUnreadCount: state => state.conversation.currentConversation.unreadCount,\n      currentMessageList: state => state.conversation.currentMessageList,\n      isCompleted: state => state.conversation.isCompleted\n    }),\n    ...mapGetters(['toAccount', 'hidden']),\n    // 是否显示当前会话组件\n    showCurrentConversation() {\n      return !!this.currentConversation.conversationID\n    },\n    name() {\n      if (this.currentConversation.type === 'C2C') {\n        return this.currentConversation.userProfile.nick || this.toAccount\n      } else if (this.currentConversation.type === 'GROUP') {\n        return this.currentConversation.groupProfile.name || this.toAccount\n      } else if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n        return '系统通知'\n      }\n      return this.toAccount\n    },\n    showMessageSendBox() {\n      return this.currentConversation.type !== this.TIM.TYPES.CONV_SYSTEM\n    }\n  },\n  mounted() {\n    this.$bus.$on('image-loaded', this.onImageLoaded)\n    this.$bus.$on('scroll-bottom', this.scrollMessageListToButtom)\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n      return false\n    }\n  },\n  updated() {\n    this.keepMessageListOnButtom()\n    // 1. 系统会话隐藏右侧资料组件\n    // 2. 没有当前会话时，隐藏右侧资料组件。\n    //    背景：退出群组/删除会话时，会出现一处空白区域\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM' || \n        typeof this.currentConversation.conversationID === 'undefined') {\n      this.showConversationProfile = false\n    }\n  },\n  watch: {\n    currentUnreadCount(next) {\n      if (!this.hidden && next > 0) {\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\n      }\n    },\n    hidden(next) {\n      if (!next && this.currentUnreadCount > 0) {\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\n      }\n    }\n  },\n  methods: {\n    onScroll({ target: { scrollTop } }) {\n      let messageListNode = this.$refs['message-list']\n      if (!messageListNode) {\n        return\n      }\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n        this.isShowScrollButtomTips = false\n      }\n    },\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n    keepMessageListOnButtom() {\n      let messageListNode = this.$refs['message-list']\n      if (!messageListNode) {\n        return\n      }\n      // 距离底部20px内强制滚到底部,否则提示有新消息\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n        this.$nextTick(() => {\n          messageListNode.scrollTop = messageListNode.scrollHeight\n        })\n        this.isShowScrollButtomTips = false\n      } else {\n        this.isShowScrollButtomTips = true\n      }\n      this.preScrollHeight = messageListNode.scrollHeight\n    },\n    // 直接滚到底部\n    scrollMessageListToButtom() {\n      this.$nextTick(() => {\n        let messageListNode = this.$refs['message-list']\n        if (!messageListNode) {\n          return\n        }\n        messageListNode.scrollTop = messageListNode.scrollHeight\n        this.preScrollHeight = messageListNode.scrollHeight\n        this.isShowScrollButtomTips = false\n      })\n    },\n    showMore() {\n      this.showConversationProfile = !this.showConversationProfile\n    },\n    onImageLoaded() {\n      this.keepMessageListOnButtom()\n    }\n  }\n}\n",{"version":3,"sources":["current-conversation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"current-conversation.vue","sourceRoot":"src/components/conversation","sourcesContent":["<template>\n  <div class=\"current-conversation-wrapper\">\n    <div class=\"current-conversation\" @scroll=\"onScroll\" v-if=\"showCurrentConversation\">\n      <div class=\"header\">\n        <div class=\"name\">{{ name }}</div>\n        <div class=\"btn-more-info\"\n          :class=\"showConversationProfile ? '' : 'left-arrow'\"\n          @click=\"showMore\"\n          v-show=\"!currentConversation.conversationID.includes('SYSTEM')\"\n          title=\"查看详细信息\">\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"message-list\" ref=\"message-list\" @scroll=\"this.onScroll\">\n          <div class=\"more\" v-if=\"!isCompleted\">\n            <el-button\n              type=\"text\"\n              @click=\"$store.dispatch('getMessageList', currentConversation.conversationID)\"\n            >查看更多</el-button>\n          </div>\n          <div class=\"no-more\" v-else>没有更多了</div>\n          <message-item v-for=\"message in currentMessageList\" :key=\"message.ID\" :message=\"message\"/>\n        </div>\n        <div v-show=\"isShowScrollButtomTips\" class=\"newMessageTips\" @click=\"scrollMessageListToButtom\">回到最新位置</div>\n      </div>\n      <div class=\"footer\" v-if=\"showMessageSendBox\" >\n        <message-send-box/>\n      </div>\n    </div>\n    <div class=\"profile\" v-if=\"showConversationProfile\" >\n      <conversation-profile/>\n    </div>\n    <!-- 群成员资料组件 -->\n    <member-profile-card />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport MessageSendBox from '../message/message-send-box'\nimport MessageItem from '../message/message-item'\nimport ConversationProfile from './conversation-profile.vue'\nimport MemberProfileCard from '../group/member-profile-card'\nexport default {\n  name: 'CurrentConversation',\n  components: {\n    MessageSendBox,\n    MessageItem,\n    ConversationProfile,\n    MemberProfileCard\n  },\n  data() {\n    return {\n      isShowScrollButtomTips: false,\n      preScrollHeight: 0,\n      showConversationProfile: false,\n      timeout: ''\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation,\n      currentUnreadCount: state => state.conversation.currentConversation.unreadCount,\n      currentMessageList: state => state.conversation.currentMessageList,\n      isCompleted: state => state.conversation.isCompleted\n    }),\n    ...mapGetters(['toAccount', 'hidden']),\n    // 是否显示当前会话组件\n    showCurrentConversation() {\n      return !!this.currentConversation.conversationID\n    },\n    name() {\n      if (this.currentConversation.type === 'C2C') {\n        return this.currentConversation.userProfile.nick || this.toAccount\n      } else if (this.currentConversation.type === 'GROUP') {\n        return this.currentConversation.groupProfile.name || this.toAccount\n      } else if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n        return '系统通知'\n      }\n      return this.toAccount\n    },\n    showMessageSendBox() {\n      return this.currentConversation.type !== this.TIM.TYPES.CONV_SYSTEM\n    }\n  },\n  mounted() {\n    this.$bus.$on('image-loaded', this.onImageLoaded)\n    this.$bus.$on('scroll-bottom', this.scrollMessageListToButtom)\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n      return false\n    }\n  },\n  updated() {\n    this.keepMessageListOnButtom()\n    // 1. 系统会话隐藏右侧资料组件\n    // 2. 没有当前会话时，隐藏右侧资料组件。\n    //    背景：退出群组/删除会话时，会出现一处空白区域\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM' || \n        typeof this.currentConversation.conversationID === 'undefined') {\n      this.showConversationProfile = false\n    }\n  },\n  watch: {\n    currentUnreadCount(next) {\n      if (!this.hidden && next > 0) {\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\n      }\n    },\n    hidden(next) {\n      if (!next && this.currentUnreadCount > 0) {\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\n      }\n    }\n  },\n  methods: {\n    onScroll({ target: { scrollTop } }) {\n      let messageListNode = this.$refs['message-list']\n      if (!messageListNode) {\n        return\n      }\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n        this.isShowScrollButtomTips = false\n      }\n    },\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n    keepMessageListOnButtom() {\n      let messageListNode = this.$refs['message-list']\n      if (!messageListNode) {\n        return\n      }\n      // 距离底部20px内强制滚到底部,否则提示有新消息\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n        this.$nextTick(() => {\n          messageListNode.scrollTop = messageListNode.scrollHeight\n        })\n        this.isShowScrollButtomTips = false\n      } else {\n        this.isShowScrollButtomTips = true\n      }\n      this.preScrollHeight = messageListNode.scrollHeight\n    },\n    // 直接滚到底部\n    scrollMessageListToButtom() {\n      this.$nextTick(() => {\n        let messageListNode = this.$refs['message-list']\n        if (!messageListNode) {\n          return\n        }\n        messageListNode.scrollTop = messageListNode.scrollHeight\n        this.preScrollHeight = messageListNode.scrollHeight\n        this.isShowScrollButtomTips = false\n      })\n    },\n    showMore() {\n      this.showConversationProfile = !this.showConversationProfile\n    },\n    onImageLoaded() {\n      this.keepMessageListOnButtom()\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n/* 当前会话的骨架屏 */\n.current-conversation-wrapper\n  height $height\n  background-color $background-light\n  color $base\n  display flex\n  .current-conversation\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: $height;\n  .profile\n    height: $height;\n    overflow-y: scroll;\n    width 220px\n    border-left 1px solid $border-base\n    flex-shrink 0\n  .more\n    display: flex;\n    justify-content: center;\n    font-size: 12px;\n  .no-more\n    display: flex;\n    justify-content: center;\n    color: $secondary;\n    font-size: 12px;\n    padding: 10px 10px;\n\n.header\n  border-bottom 1px solid $border-base\n  height 50px\n  position relative\n  .name\n    padding 0 20px\n    color $base\n    font-size 18px\n    font-weight bold\n    line-height 50px\n    text-shadow $font-dark 0 0 0.1em\n  .btn-more-info\n    position absolute\n    top 10px\n    right -15px\n    border-radius 50%\n    width 30px\n    height 30px\n    cursor pointer\n    &::before\n      position absolute\n      right 0\n      z-index 0\n      content \"\"\n      width: 15px\n      height: 30px\n      border: 1px solid $border-base\n      border-radius: 0 100% 100% 0/50%\n      border-left: none\n      background-color $background-light\n    &::after\n      content \"\"\n      width: 8px;\n      height: 8px;\n      transition: transform 0.8s;\n      border-top: 2px solid $secondary;\n      border-right: 2px solid $secondary;\n      float:right;\n      position:relative;\n      top: 11px;\n      right: 8px;\n      transform:rotate(45deg)\n    &.left-arrow\n      transform rotate(180deg)\n      &::before\n        background-color $white\n    &:hover\n      &::after\n        border-color $light-primary\n.content\n  display: flex;\n  flex 1\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n  .message-list\n    width: 100%;\n    box-sizing: border-box;\n    overflow-y: scroll;\n    padding: 0 20px;\n  .newMessageTips\n    position: absolute\n    cursor: pointer;\n    padding: 5px;\n    width: 120px;\n    margin: auto;\n    left: 0;\n    right: 0;\n    bottom: 5px;\n    font-size: 12px;\n    text-align: center;\n    border-radius: 10px;\n    border: $border-light 1px solid;\n    background-color: $white;\n    color: $primary;\n.footer\n  border-top: 1px solid $border-base;\n.show-more {\n  text-align: right;\n  padding: 10px 20px 0 0;\n}\n</style>\n"]}]}