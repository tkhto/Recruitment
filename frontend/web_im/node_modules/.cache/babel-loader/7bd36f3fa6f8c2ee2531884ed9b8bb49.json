{"remainingRequest":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js!/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/conversationProfile/group-member-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maguodong/Documents/projects/luffycity/web im/src/components/conversation/conversationProfile/group-member-info.vue","mtime":1576188392000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/Users/maguodong/Documents/projects/luffycity/web im/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Popover2 from \"element-ui/lib/theme-chalk/popover.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popover from \"element-ui/lib/popover\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { getFullDate } from \"../../../utils/date\";\nexport default {\n  components: {\n    ElPopover: _Popover\n  },\n  props: ['member'],\n  data: function data() {\n    return {\n      muteTime: '',\n      popoverVisible: false,\n      nameCardPopoverVisible: false,\n      nameCard: this.member.nameCard\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    current: function current(state) {\n      return state.current;\n    }\n  }), {\n    // 是否显示踢出群成员按钮\n    showKickout: function showKickout() {\n      return (this.isOwner || this.isAdmin) && !this.isMine;\n    },\n    isOwner: function isOwner() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner';\n    },\n    isAdmin: function isAdmin() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin';\n    },\n    isMine: function isMine() {\n      return this.currentUserProfile.userID === this.member.userID;\n    },\n    canChangeRole: function canChangeRole() {\n      return this.isOwner && ['ChatRoom', 'Public'].includes(this.currentConversation.subType);\n    },\n    changeRoleTitle: function changeRoleTitle() {\n      if (!this.canChangeRole) {\n        return '';\n      }\n\n      return this.isOwner && this.member.role === 'Admin' ? '设为：Member' : '设为：Admin';\n    },\n    // 是否显示禁言时间\n    showMuteUntil: function showMuteUntil() {\n      // 禁言时间小于当前时间\n      return this.member.muteUntil * 1000 > this.current;\n    },\n    // 是否显示取消禁言按钮\n    showCancelBan: function showCancelBan() {\n      if (this.showMuteUntil && this.currentConversation.type === this.TIM.TYPES.CONV_GROUP && !this.isMine) {\n        return this.isOwner || this.isAdmin;\n      }\n\n      return false;\n    },\n    // 是否显示禁言按钮\n    showBan: function showBan() {\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\n        return this.isOwner || this.isAdmin;\n      }\n\n      return false;\n    },\n    // 是否显示编辑群名片按钮\n    showEditNameCard: function showEditNameCard() {\n      return this.isOwner || this.isAdmin;\n    },\n    // 日期格式化后的禁言时间\n    muteUntil: function muteUntil() {\n      return getFullDate(new Date(this.member.muteUntil * 1000));\n    }\n  }),\n  methods: {\n    kickoutGroupMember: function kickoutGroupMember() {\n      var _this = this;\n\n      this.tim.deleteGroupMember({\n        groupID: this.currentConversation.groupProfile.groupID,\n        reason: '我要踢你出群',\n        userIDList: [this.member.userID]\n      }).then(function () {\n        _this.$store.commit('deleteGroupMemeber', _this.member.userID);\n      }).catch(function (error) {\n        _this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    changeMemberRole: function changeMemberRole() {\n      var _this2 = this;\n\n      if (!this.canChangeRole) {\n        return;\n      }\n\n      var currentRole = this.member.role;\n      this.tim.setGroupMemberRole({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        role: currentRole === 'Admin' ? 'Member' : 'Admin'\n      }).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    setGroupMemberMuteTime: function setGroupMemberMuteTime() {\n      var _this3 = this;\n\n      this.tim.setGroupMemberMuteTime({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        muteTime: Number(this.muteTime)\n      }).then(function () {\n        _this3.muteTime = '';\n        _this3.popoverVisible = false;\n      }).catch(function (error) {\n        _this3.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    // 取消禁言\n    cancelMute: function cancelMute() {\n      var _this4 = this;\n\n      this.tim.setGroupMemberMuteTime({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        muteTime: 0\n      }).then(function () {\n        _this4.muteTime = '';\n      }).catch(function (error) {\n        _this4.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    setGroupMemberNameCard: function setGroupMemberNameCard() {\n      var _this5 = this;\n\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.tim.setGroupMemberNameCard({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        nameCard: this.nameCard\n      }).then(function () {\n        _this5.nameCardPopoverVisible = false;\n\n        _this5.$store.commit('showMessage', {\n          message: '修改成功'\n        });\n      }).catch(function (error) {\n        _this5.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["group-member-info.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n      <span class=\"label\">userID:</span>\n      {{ member.userID }}\n      <el-button v-if=\"showCancelBan\" type=\"text\" @click=\"cancelMute\">取消禁言</el-button>\n      <el-popover title=\"禁言\" v-model=\"popoverVisible\" v-show=\"showBan\">\n        <el-input\n          v-model=\"muteTime\"\n          placeholder=\"请输入禁言时间\"\n          @keydown.enter.native=\"setGroupMemberMuteTime\"\n        />\n        <el-button slot=\"reference\" type=\"text\" style=\"color:red;\">禁言</el-button>\n      </el-popover>\n    </div>\n    <div>\n      <span class=\"label\">nick:</span>\n      {{ member.nick || '暂无' }}\n    </div>\n    <div>\n      <span class=\"label\">nameCard:</span>\n      {{ member.nameCard || '暂无' }}\n      <el-popover title=\"修改群名片\" v-model=\"nameCardPopoverVisible\" v-show=\"showEditNameCard\">\n        <el-input\n          v-model=\"nameCard\"\n          placeholder=\"请输入群名片\"\n          @keydown.enter.native=\"setGroupMemberNameCard\"\n        />\n        <i\n          class=\"el-icon-edit\"\n          title=\"修改群名片\"\n          slot=\"reference\"\n          style=\"cursor:pointer; font-size:1.6rem;\"\n        ></i>\n      </el-popover>\n    </div>\n    <div>\n      <span class=\"label\">role:</span>\n      <span class=\"content role\" :title=\"changeRoleTitle\">{{ member.role }}</span>\n    </div>\n    <div v-if=\"showMuteUntil\">\n      <span class=\"label\">禁言至:</span>\n      <span class=\"content\">{{ muteUntil }}</span>\n    </div>\n    <el-button type=\"text\" v-if=\"canChangeRole\" @click=\"changeMemberRole\">\n      {{\n      member.role === 'Admin' ? '取消管理员' : '设为管理员'\n      }}\n    </el-button>\n    <el-button type=\"text\" v-if=\"showKickout\" style=\"color:red;\" @click=\"kickoutGroupMember\">踢出群组</el-button>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { Popover } from 'element-ui'\nimport { getFullDate } from '../../../utils/date'\nexport default {\n  components: {\n    ElPopover: Popover\n  },\n  props: ['member'],\n  data() {\n    return {\n      muteTime: '',\n      popoverVisible: false,\n      nameCardPopoverVisible: false,\n      nameCard: this.member.nameCard\n    }\n  },\n  computed: {\n    ...mapState({\n      currentConversation: state => state.conversation.currentConversation,\n      currentUserProfile: state => state.user.currentUserProfile,\n      current: state => state.current\n    }),\n    // 是否显示踢出群成员按钮\n    showKickout() {\n      return (this.isOwner || this.isAdmin) && !this.isMine\n    },\n    isOwner() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\n    },\n    isAdmin() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\n    },\n    isMine() {\n      return this.currentUserProfile.userID === this.member.userID\n    },\n    canChangeRole() {\n      return (\n        this.isOwner &&\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\n      )\n    },\n    changeRoleTitle() {\n      if (!this.canChangeRole) {\n        return ''\n      }\n      return this.isOwner && this.member.role === 'Admin'\n        ? '设为：Member'\n        : '设为：Admin'\n    },\n    // 是否显示禁言时间\n    showMuteUntil() {\n      // 禁言时间小于当前时间\n      return this.member.muteUntil * 1000 > this.current\n    },\n    // 是否显示取消禁言按钮\n    showCancelBan() {\n      if (\n        this.showMuteUntil &&\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\n        !this.isMine\n      ) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示禁言按钮\n    showBan() {\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\n        return this.isOwner || this.isAdmin\n      }\n      return false\n    },\n    // 是否显示编辑群名片按钮\n    showEditNameCard() {\n      return this.isOwner || this.isAdmin\n    },\n    // 日期格式化后的禁言时间\n    muteUntil() {\n      return getFullDate(new Date(this.member.muteUntil * 1000))\n    }\n  },\n  methods: {\n    kickoutGroupMember() {\n      this.tim\n        .deleteGroupMember({\n          groupID: this.currentConversation.groupProfile.groupID,\n          reason: '我要踢你出群',\n          userIDList: [this.member.userID]\n        })\n        .then(() => {\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    changeMemberRole() {\n      if (!this.canChangeRole) {\n        return\n      }\n      let currentRole = this.member.role\n      this.tim\n        .setGroupMemberRole({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberMuteTime() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: Number(this.muteTime)\n        })\n        .then(() => {\n          this.muteTime = ''\n          this.popoverVisible = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    // 取消禁言\n    cancelMute() {\n      this.tim\n        .setGroupMemberMuteTime({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          muteTime: 0\n        })\n        .then(() => {\n          this.muteTime = ''\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    setGroupMemberNameCard() {\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        })\n        return\n      }\n      this.tim\n        .setGroupMemberNameCard({\n          groupID: this.currentConversation.groupProfile.groupID,\n          userID: this.member.userID,\n          nameCard: this.nameCard\n        })\n        .then(() => {\n          this.nameCardPopoverVisible = false\n          this.$store.commit('showMessage', {\n            message: '修改成功'\n          })\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.label {\n  color: rgb(204, 200, 200);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components/conversation/conversationProfile"}]}